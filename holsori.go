package aheui

type 커서움직임 struct {
	움직임 bool
	상하  int
	좌우  int
}

type 좌표 struct {
	행 int
	렬 int
}

func 커서이동(상하 int, 좌우 int) 커서움직임 {
	return 커서움직임{true, 상하, 좌우}
}

func 기능없음() 커서움직임 {
	return 커서움직임{false, 0, 0}
}

const (
	내비둠 = 0
	한칸  = 1
	두칸  = 2
)

var 홀소리표 = []커서움직임{
	커서이동(내비둠, +한칸),
	기능없음(),
	커서이동(내비둠, +두칸),
	기능없음(),
	커서이동(내비둠, -한칸),
	기능없음(),
	커서이동(내비둠, -두칸),
	기능없음(),
	커서이동(-한칸, 내비둠),
	기능없음(),
	기능없음(),
	기능없음(),
	커서이동(-두칸, 내비둠),
	커서이동(+한칸, 내비둠),
	기능없음(),
	기능없음(),
	기능없음(),
	커서이동(+두칸, 내비둠),
	기능없음(), // ㅡ  FIXME: 방향 바꾸기 처리 추가
	기능없음(), // ㅢ
	기능없음(), // ㅣ
}

func (저장 *저장공간) 진행(커서 커서움직임, 위치 좌표) 좌표 {
	if 커서.움직임 {
		return 좌표{위치.행 + 커서.상하, 위치.렬 + 커서.좌우}
	} else {
		return 위치
	}
}
